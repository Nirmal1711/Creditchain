{"ast":null,"code":"var _jsxFileName = \"D:\\\\CreditscoringDashboard\\\\frontend\\\\src\\\\contexts\\\\Web3Context.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, CONTRACT_ABI } from '../contract';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Web3Context = /*#__PURE__*/createContext();\nexport const useWeb3 = () => {\n  _s();\n  const context = useContext(Web3Context);\n  if (!context) {\n    throw new Error('useWeb3 must be used within Web3Provider');\n  }\n  return context;\n};\n_s(useWeb3, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const Web3Provider = ({\n  children\n}) => {\n  _s2();\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [isOwner, setIsOwner] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Connect wallet\n  const connectWallet = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      if (!window.ethereum) {\n        throw new Error('Please install MetaMask to use this application');\n      }\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const web3Provider = new ethers.BrowserProvider(window.ethereum);\n      const web3Signer = await web3Provider.getSigner();\n      const contractInstance = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, web3Signer);\n      setAccount(accounts[0]);\n      setProvider(web3Provider);\n      setSigner(web3Signer);\n      setContract(contractInstance);\n\n      // Check if user is owner\n      const ownerAddress = await contractInstance.owner();\n      setIsOwner(ownerAddress.toLowerCase() === accounts[0].toLowerCase());\n      setLoading(false);\n    } catch (err) {\n      console.error('Error connecting wallet:', err);\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setAccount(null);\n    setProvider(null);\n    setSigner(null);\n    setContract(null);\n    setIsOwner(false);\n  };\n\n  // Listen for account changes\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', accounts => {\n        if (accounts.length === 0) {\n          disconnectWallet();\n        } else {\n          connectWallet();\n        }\n      });\n      window.ethereum.on('chainChanged', () => {\n        window.location.reload();\n      });\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeAllListeners('accountsChanged');\n        window.ethereum.removeAllListeners('chainChanged');\n      }\n    };\n  }, []);\n  const value = {\n    account,\n    provider,\n    signer,\n    contract,\n    isOwner,\n    loading,\n    error,\n    connectWallet,\n    disconnectWallet\n  };\n  return /*#__PURE__*/_jsxDEV(Web3Context.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 10\n  }, this);\n};\n_s2(Web3Provider, \"tuP0Bqxyml/7JxZD5U9XEO5ObZo=\");\n_c = Web3Provider;\nvar _c;\n$RefreshReg$(_c, \"Web3Provider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","ethers","CONTRACT_ADDRESS","CONTRACT_ABI","jsxDEV","_jsxDEV","Web3Context","useWeb3","_s","context","Error","Web3Provider","children","_s2","account","setAccount","provider","setProvider","signer","setSigner","contract","setContract","isOwner","setIsOwner","loading","setLoading","error","setError","connectWallet","window","ethereum","accounts","request","method","web3Provider","BrowserProvider","web3Signer","getSigner","contractInstance","Contract","ownerAddress","owner","toLowerCase","err","console","message","disconnectWallet","on","length","location","reload","removeAllListeners","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CreditscoringDashboard/frontend/src/contexts/Web3Context.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, CONTRACT_ABI } from '../contract';\n\nconst Web3Context = createContext();\n\nexport const useWeb3 = () => {\n  const context = useContext(Web3Context);\n  if (!context) {\n    throw new Error('useWeb3 must be used within Web3Provider');\n  }\n  return context;\n};\n\nexport const Web3Provider = ({ children }) => {\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [isOwner, setIsOwner] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Connect wallet\n  const connectWallet = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      if (!window.ethereum) {\n        throw new Error('Please install MetaMask to use this application');\n      }\n\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts',\n      });\n\n      const web3Provider = new ethers.BrowserProvider(window.ethereum);\n      const web3Signer = await web3Provider.getSigner();\n      const contractInstance = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        CONTRACT_ABI,\n        web3Signer\n      );\n\n      setAccount(accounts[0]);\n      setProvider(web3Provider);\n      setSigner(web3Signer);\n      setContract(contractInstance);\n\n      // Check if user is owner\n      const ownerAddress = await contractInstance.owner();\n      setIsOwner(ownerAddress.toLowerCase() === accounts[0].toLowerCase());\n\n      setLoading(false);\n    } catch (err) {\n      console.error('Error connecting wallet:', err);\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Disconnect wallet\n  const disconnectWallet = () => {\n    setAccount(null);\n    setProvider(null);\n    setSigner(null);\n    setContract(null);\n    setIsOwner(false);\n  };\n\n  // Listen for account changes\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', (accounts) => {\n        if (accounts.length === 0) {\n          disconnectWallet();\n        } else {\n          connectWallet();\n        }\n      });\n\n      window.ethereum.on('chainChanged', () => {\n        window.location.reload();\n      });\n    }\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeAllListeners('accountsChanged');\n        window.ethereum.removeAllListeners('chainChanged');\n      }\n    };\n  }, []);\n\n  const value = {\n    account,\n    provider,\n    signer,\n    contract,\n    isOwner,\n    loading,\n    error,\n    connectWallet,\n    disconnectWallet,\n  };\n\n  return <Web3Context.Provider value={value}>{children}</Web3Context.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}